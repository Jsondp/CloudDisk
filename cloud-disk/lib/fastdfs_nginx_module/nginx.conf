#运行用户, 如果centos平台，需要设置 user root;
#user  nobody;

#启动进程,通常设置成和cpu的数量相等
worker_processes  1;

#pid        logs/nginx.pid;

#工作模式及连接数上限
events {
	#epoll是多路复用IO(I/O Multiplexing)中的一种方式,
	#仅用于linux2.6以上内核,可以大大提高nginx的性能
	use epoll;
	
	#单个后台worker process进程的最大并发链接数
    worker_connections  1024;
}


http {
	#设定mime类型,类型由mime.type文件定义
    include       mime.types;
    default_type  application/octet-stream;
	
	#上传文件大小限制设置
	client_max_body_size 30m;

    sendfile        on;
    #tcp_nopush     on;

	#连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
	
	#开启gzip压缩
    #gzip  on;
	

	#配置负载均衡服务器
	upstream mike.com{
		server 192.168.31.138:80; #后端服务器1
		server 192.168.31.164:80; #后端服务器1
	}

	#设定虚拟主机配置
    server {
		#侦听80端口
        listen       80;
		
		#也可以设置为 合法域名
        server_name  localhost;
		
		#定义服务器的默认网站根目录位置
        #root   html;

		#默认请求
        location / {
			#配置反向代理功能
			#proxy_pass http://mike.com;

			#定义如果访问根目录的请求目录
			root   html;
			#定义首页索引文件的名称
			index  index.html index.htm;
        }
		
		location /upload.html {
            root html;
            index upload.html;
        }
		
		location /group1/M00 {
			root /usr/fastdfs/fastdfs0/data;
			ngx_fastdfs_module;
		}

		#监听用户的test请求，通过fastcgi_pass交给本地8001端口处理
		#此时spwan-cgi已经将8001端口交给之前我们写好的test进程处理
		location /test {
			fastcgi_pass 127.0.0.1:8001;
			fastcgi_index test;
			include fastcgi.conf;
		}
		
		location /echo {
            fastcgi_pass 127.0.0.1:8002;
            fastcgi_index echo.cgi;
            include fastcgi.conf;
        }
		
		location /upload/UploadAction {
            fastcgi_pass 127.0.0.1:8003;
            fastcgi_index upload.cgi;
            include fastcgi.conf;
        }

      
		#定义错误提示页面
		error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }  
    }
}
